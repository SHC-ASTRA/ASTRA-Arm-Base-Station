function T_1_to_0(in1) {
    //This function was generated by the Symbolic Math Toolbox version 9.0.
    //03-Mar-2022 20:11:09

    var theta1 = in1[0];
    var t2 = math.cos(theta1);
    var t3 = math.sin(theta1);
    return math.transpose(math.matrix(math.reshape([t2, t3, 0.0, 0.0, -t3, t2, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 2.4092e-1, 1.0], [4, 4])));
}

function T_2_to_1(in1) {
    //This function was generated by the Symbolic Math Toolbox version 9.0.
    //03-Mar-2022 20:11:09

    var theta2 = in1[1];
    var t2 = math.cos(theta2);
    var t3 = math.sin(theta2);
    return math.transpose(math.matrix(math.reshape([t2, 0.0, t3, 0.0, -t3, 0.0, t2, 0.0, 0.0, -1.0, 0.0, 0.0, 3.48e-3, 0.0, 0.0, 1.0], [4, 4])));
}

function T_3_to_2(in1) {
    //This function was generated by the Symbolic Math Toolbox version 9.0.
    //03-Mar-2022 20:11:09

    var theta3 = in1[2];
    var t2 = math.cos(theta3);
    var t3 = math.sin(theta3);
    return math.transpose(math.matrix(math.reshape([t2, t3, 0.0, 0.0, -t3, t2, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.4e+1 / 2.5e+1, 0.0, 0.0, 1.0], [4, 4])));
}

function T_4_to_3(in1) {
    //This function was generated by the Symbolic Math Toolbox version 9.0.
    //03-Mar-2022 20:11:09

    var theta4 = in1[3];
    var t2 = math.cos(theta4);
    var t3 = math.sin(theta4);
    return math.transpose(math.matrix(math.reshape([t2, t3, 0.0, 0.0, -t3, t2, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 8.3e+1 / 2.0e+2, 0.0, 0.0, 1.0], [4, 4])));
}

function T_5_to_4(in1) {
    //This function was generated by the Symbolic Math Toolbox version 9.0.
    //03-Mar-2022 20:11:09

    var theta5 = in1[4];
    var t2 = math.pi / 2.0;
    var t3 = t2 + theta5;
    var t4 = math.cos(t3);
    var t5 = math.sin(t3);
    var t6 = -t5;
    return math.transpose(math.matrix(math.reshape([t4, 0.0, t6, 0.0, t6, 0.0, -t4, 0.0, 0.0, 1.0, 0.0, 0.0, 7.171e-2, 2.517e-2, 0.0, 1.0], [4, 4])));

}

function T_6_to_5(in1) {
    //This function was generated by the Symbolic Math Toolbox version 9.0.
    //03-Mar-2022 20:11:09

    var theta6 = in1[5];
    var t2 = math.cos(theta6);
    var t3 = math.sin(theta6);
    return math.transpose(math.matrix(math.reshape([t2, 0.0, t3, 0.0, -t3, 0.0, t2, 0.0, 0.0, -1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0], [4, 4])));

}

function T_H_to_6(in1) {
    //This function was generated by the Symbolic Math Toolbox version 9.0.
    //03-Mar-2022 20:11:09

    return math.transpose(math.matrix(math.reshape([0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 2.1744e-1, 1.0], [4, 4])));
}

function Jfunc(in1) {
    // J_func
    // J = J_func(THETA1, THETA2, THETA3, THETA4, THETA5, THETA6)
    // This function was generated by the Symbolic Math Toolbox version 9.0.
    // 03 - Mar - 2022 20: 12: 46

    var theta1 = in1[0];
    var theta2 = in1[1];
    var theta3 = in1[2];
    var theta4 = in1[3];
    var theta5 = in1[4];
    var theta6 = in1[5];

    var t2 = math.cos(theta1);
    var t3 = math.cos(theta2);
    var t4 = math.cos(theta3);
    var t5 = math.cos(theta4);
    var t6 = math.cos(theta5);
    var t7 = math.sin(theta1);
    var t8 = math.sin(theta2);
    var t9 = math.sin(theta3);
    var t10 = math.sin(theta4);
    var t11 = math.sin(theta5);
    var t12 = theta2 + theta3;
    var t13 = theta2 * 2.0;
    var t14 = theta2 * 3.0;
    var t15 = theta3 * 2.0;
    var t16 = theta3 * 3.0;
    var t17 = theta4 * 2.0;
    var t18 = theta4 * 3.0;
    var t19 = theta5 * 2.0;
    var t20 = theta5 * 3.0;
    var t21 = theta6 * 2.0;
    var t35 = -theta5;
    var t43 = math.sqrt(2.0);
    var t69 = math.atan(3.509970715381397e-1);
    var t70 = math.atan(2.849026618990862);
    var t88 = 7.599903288858352e+3;
    var t22 = math.cos(t13);
    var t23 = math.cos(t15);
    var t24 = math.cos(t17);
    var t25 = math.cos(t19);
    var t26 = math.cos(t21);
    var t27 = t6 ** 2;
    var t28 = math.sin(t13);
    var t29 = math.sin(t15);
    var t30 = math.sin(t17);
    var t31 = math.sin(t21);
    var t32 = math.cos(t12);
    var t33 = math.sin(t12);
    var t34 = t12 + theta4;
    var t36 = -t19;
    var t37 = -t20;
    var t38 = t2 * t11;
    var t40 = t7 * t11;
    var t52 = t8 * 5.6e+4;
    var t71 = t12 * 2.0 + t17;
    var t74 = t12 * 3.0 + t18 + theta5;
    var t95 = t12 * 3.0 + t18 + t20;
    var t96 = -t70;
    var t102 = t12 * 3.0 + t18 + t35;
    var t39 = math.cos(t34);
    var t41 = math.sin(t34);
    var t42 = t34 + theta5;
    var t45 = t25 * 2.0;
    var t47 = t19 + t34;
    var t48 = t20 + t34;
    var t49 = -t25;
    var t53 = t34 + t35;
    var t54 = t34 + t36;
    var t55 = t34 + t37;
    var t59 = t26 * t27;
    var t65 = t33 * 4.15e+4;
    var t72 = t10 * t33 * 2.517e+3;
    var t73 = math.cos(t71);
    var t79 = t5 * t32 * 2.517e+3;
    var t80 = t10 * t32 * 7.171e+3;
    var t81 = t5 * t33 * 7.171e+3;
    var t85 = t32 * (8.3e+1 / 2.0e+2);
    var t89 = math.cos(t74);
    var t94 = t19 + t71;
    var t98 = math.cos(t95);
    var t100 = t34 + t69;
    var t101 = t36 + t71;
    var t103 = t12 * 3.0 + t18 + t37;
    var t105 = math.cos(t102);
    var t115 = t22 * t23 * t24 * t27;
    var t116 = t22 * t27 * t29 * t30;
    var t117 = t23 * t27 * t28 * t30;
    var t118 = t24 * t27 * t28 * t29;
    var t120 = t34 + t96;
    var t124 = t22 * t23 * t24 * t26 * 2.0;
    var t125 = t22 * t26 * t29 * t30 * 2.0;
    var t126 = t23 * t26 * t28 * t30 * 2.0;
    var t127 = t24 * t26 * t28 * t29 * 2.0;
    var t133 = t11 * t22 * t23 * t30 * t31 * 2.0;
    var t134 = t11 * t22 * t24 * t29 * t31 * 2.0;
    var t135 = t11 * t23 * t24 * t28 * t31 * 2.0;
    var t137 = t11 * t28 * t29 * t30 * t31 * 2.0;
    var t44 = math.cos(t42);
    var t46 = math.sin(t42);
    var t50 = -t45;
    var t56 = math.cos(t47);
    var t57 = math.cos(t48);
    var t58 = math.sin(t53);
    var t60 = math.cos(t53);
    var t61 = math.cos(t54);
    var t62 = math.cos(t55);
    var t64 = t49 + 1.0;
    var t66 = t2 * t6 * t39;
    var t67 = t6 * t7 * t39;
    var t82 = -t72;
    var t92 = t6 * t41 * 2.1744e+4;
    var t93 = t73 * 2.0;
    var t97 = math.cos(t94);
    var t99 = t89 * 3.0;
    var t104 = math.cos(t101);
    var t106 = math.cos(t103);
    var t109 = math.cos(t100);
    var t119 = t105 * 3.0;
    var t128 = math.cos(t120);
    var t129 = -t115;
    var t130 = -t125;
    var t131 = -t126;
    var t132 = -t127;
    var t139 = -t137;
    var t140 = t22 * t23 * t24 * t59;
    var t141 = t22 * t29 * t30 * t59;
    var t142 = t23 * t28 * t30 * t59;
    var t143 = t24 * t28 * t29 * t59;
    var t51 = t46 * 2.0;
    var t63 = t44 * 1.3e+1;
    var t68 = t56 * 2.0;
    var t75 = t61 * 2.0;
    var t77 = -t57;
    var t78 = t58 * 2.0;
    var t83 = math.multiply(t46, math.complex(0, 5.0e-1));
    var t84 = t46 * 1.0872e+4;
    var t86 = -t62;
    var t87 = t60 * 1.3e+1;
    var t91 = math.sqrt(t64);
    var t107 = math.multiply(t58, math.complex(0, 5.0e-1));
    var t108 = t58 * 1.0872e+4;
    var t110 = t46 + t58;
    var t112 = (t40 == t66);
    var t113 = t38 + t67;
    var t114 = (t40 != t66);
    var t121 = t44 * 1.0872e-1;
    var t136 = t60 * 1.0872e-1;
    var t145 = -t140;
    var t146 = t88 * t128;
    var t148 = (t88 * t109) / 1.0e+5;
    var t150 = t50 + t93 + t97 + t104 + 6.0;
    var t154 = t79 + t80 + t81 + t82 + t92;
    var t76 = -t68;
    var t90 = math.multiply(-1, t83);
    var t111 = math.multiply(-1, t107);
    var t122 = (t113 == 0.0);
    var t123 = (t113 != 0.0);
    var t138 = t51 + t78;
    var t151 = 1.0 / t150;
    var t152 = 1.0 / t150 ** (3.0 / 2.0);
    var t156 = t65 + t84 + t108 + t146;
    var t160 = t63 + t77 + t86 + t87 + t98 + t99 + t106 + t119;
    var t164 = t27 + t59 + t116 + t117 + t118 + t124 + t129 + t130 + t131 + t132 + t133 + t134 + t135 + t139 + t141 + t142 + t143 + t145 + 2.0;
    var t144 = t75 + t76;
    var t147 = (t114 | t123);
    var t149 = math.sum(t90, t91, t111);
    var t153 = t11 * t151 * 8.0;
    var t157 = t52 + t156;
    var t158 = -t151 * (t68 - t75);
    var t162 = (t43 * t152 * t160) / 2.0;
    var t165 = 1.0 / t164;
    var t155 = -t153;
    if (t147) {
        var t159 = (t11 * -8.0) / (t50 + t97 + t104 + math.cos(t71) * 2.0 + 6.0);
    } else {
        var t159 = NaN;
    }
    if (t147) {
        var t161 = (t76 + math.cos(t54) * 2.0) / (t50 + t97 + t104 + math.cos(t71) * 2.0 + 6.0);
    } else {
        var t161 = NaN;
    }
    var t163 = -t162;
    var t166 = t138 * t165;
    var mt1 = [t7 * (-3.48e-3) - t38 * 2.1744e-1 - t67 * 2.1744e-1 - t3 * t7 * (1.4e+1 / 2.5e+1) - t3 * t4 * t7 * (8.3e+1 / 2.0e+2) + t7 * t8 * t9 * (8.3e+1 / 2.0e+2) - t5 * t7 * t32 * 7.171e-2 + t5 * t7 * t33 * 2.517e-2 + t7 * t10 * t32 * 2.517e-2 + t7 * t10 * t33 * 7.171e-2];
    if (t147) {
        var t0 = 1.0;
    } else {
        var t0 = NaN;
    }
    if (t147) {
        var t1 = 0.0;
    } else {
        var t1 = NaN;
    }
    var mt2 = [t2 * 3.48e-3 - t40 * 2.1744e-1 + t66 * 2.1744e-1 + t2 * t3 * (1.4e+1 / 2.5e+1) + t2 * t3 * t4 * (8.3e+1 / 2.0e+2) - t2 * t8 * t9 * (8.3e+1 / 2.0e+2) + t2 * t5 * t32 * 7.171e-2 - t2 * t5 * t33 * 2.517e-2 - t2 * t10 * t32 * 2.517e-2 - t2 * t10 * t33 * 7.171e-2, 0.0, t0, 0.0, t1, t2 * t157 * (-1.0e-5), t7 * t157 * (-1.0e-5), t3 * (1.4e+1 / 2.5e+1) + t85 + t121 + t136 + t148, t161, t163, t159, t2 * t156 * (-1.0e-5)];
    if (t147) {
        var t0 = (math.cos(t34) * 8.0) / (t50 + t97 + t104 + math.cos(t71) * 2.0 + 6.0);
    } else {
        var t0 = NaN;
    }
    if (t147) {
        var t1 = -(math.sin(t35 + t71) * 2.0 + math.sin(t71 + theta5) * 2.0) / (t50 + t97 + t104 + math.cos(t71) * 2.0 + 6.0);
    } else {
        var t1 = NaN;
    }
    var mt3 = [t7 * t156 * (-1.0e-5), t85 + t121 + t136 + t148, t161, t163, t159, t2 * t154 * (-1.0e-5), t7 * t154 * (-1.0e-5), t121 + t136 + t148, t161, t163, t159, t6 * t7 * (-2.1744e-1) - t38 * t39 * 2.1744e-1, t2 * t6 * 2.1744e-1 - t39 * t40 * 2.1744e-1, t121 - t136, t0, (t43 * t152 * (t57 * 3.0 - t62 * 3.0 - t63 + t87 - t89 - t98 + t105 + t106)) / 2.0, t1];
    if ((t112 & t122) & (0.0 < t110)) {
        var t0 = t138 / (t27 + t59 + t116 + t117 + t118 + t124 + t129 + t130 + t131 + t132 + t133 + t134 + t135 + t139 + t141 + t142 + t143 + t145 + 2.0);
    } else if ((t112 & t122) & (0.0 <= t149.re)) {
        var t0 = 0.0;
    } else if ((t112 & t122) & ((t110 < 0.0) | (t149.re < 0.0))) {
        var t0 = -t138 / (t27 + t59 + t116 + t117 + t118 + t124 + t129 + t130 + t131 + t132 + t133 + t134 + t135 + t139 + t141 + t142 + t143 + t145 + 2.0);
    } else if (t147) {
        var t0 = 1.0;
    } else {
        var t0 = NaN;
    }
    var mt4 = [0.0, 0.0, 0.0, 0.0, 0.0, t0];
    var J = math.reshape([mt1, mt2, mt3, mt4], [6, 6]);
    return math.transpose(math.matrix(J))

}